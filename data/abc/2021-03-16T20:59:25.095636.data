environ({'ALLUSERSPROFILE': 'C:\\ProgramData', 'APPDATA': 'C:\\Users\\Mike\\AppData\\Roaming', 'COMMONPROGRAMFILES': 'C:\\Program Files\\Common Files', 'COMMONPROGRAMFILES(X86)': 'C:\\Program Files (x86)\\Common Files', 'COMMONPROGRAMW6432': 'C:\\Program Files\\Common Files', 'COMPUTERNAME': 'DESKTOP-F56FK09', 'COMSPEC': 'C:\\Windows\\system32\\cmd.exe', 'CURRDIR': 'C:\\Users\\Mike\\anaconda3\\Lib\\idlelib\\', 'DRIVERDATA': 'C:\\Windows\\System32\\Drivers\\DriverData', 'FPS_BROWSER_APP_PROFILE_STRING': 'Internet Explorer', 'FPS_BROWSER_USER_PROFILE_STRING': 'Default', 'HOME': 'C:\\Users\\Mike', 'HOMEDRIVE': 'C:', 'HOMEPATH': '\\Users\\Mike', 'LOCALAPPDATA': 'C:\\Users\\Mike\\AppData\\Local', 'LOGONSERVER': '\\\\DESKTOP-F56FK09', 'NUMBER_OF_PROCESSORS': '2', 'ONEDRIVE': 'C:\\Users\\Mike\\OneDrive', 'OS': 'Windows_NT', 'PATH': 'C:\\Program Files\\AdoptOpenJDK\\jre-11.0.7.10-hotspot\\bin;C:\\Windows\\system32;C:\\Windows;C:\\Windows\\System32\\Wbem;C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\;C:\\Windows\\System32\\OpenSSH\\;C:\\Program Files\\nodejs\\;C:\\Program Files\\Git\\cmd;C:\\Users\\Mike\\anaconda3;C:\\Users\\Mike\\anaconda3\\Library\\mingw-w64\\bin;C:\\Users\\Mike\\anaconda3\\Library\\usr\\bin;C:\\Users\\Mike\\anaconda3\\Library\\bin;C:\\Users\\Mike\\anaconda3\\Scripts;C:\\Users\\Mike\\AppData\\Local\\Microsoft\\WindowsApps;C:\\Users\\Mike\\AppData\\Local\\Programs\\Git\\cmd;C:\\Users\\Mike\\AppData\\Roaming\\npm', 'PATHEXT': '.COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH;.MSC', 'PROCESSOR_ARCHITECTURE': 'AMD64', 'PROCESSOR_IDENTIFIER': 'Intel64 Family 6 Model 158 Stepping 11, GenuineIntel', 'PROCESSOR_LEVEL': '6', 'PROCESSOR_REVISION': '9e0b', 'PROGRAMDATA': 'C:\\ProgramData', 'PROGRAMFILES': 'C:\\Program Files', 'PROGRAMFILES(X86)': 'C:\\Program Files (x86)', 'PROGRAMW6432': 'C:\\Program Files', 'PROMPT': '$P$G', 'PSMODULEPATH': 'C:\\Program Files\\WindowsPowerShell\\Modules;C:\\Windows\\system32\\WindowsPowerShell\\v1.0\\Modules', 'PUBLIC': 'C:\\Users\\Public', 'SESSIONNAME': 'Console', 'SYSTEMDRIVE': 'C:', 'SYSTEMROOT': 'C:\\Windows', 'TEMP': 'C:\\Users\\Mike\\AppData\\Local\\Temp', 'TMP': 'C:\\Users\\Mike\\AppData\\Local\\Temp', 'USERDOMAIN': 'DESKTOP-F56FK09', 'USERDOMAIN_ROAMINGPROFILE': 'DESKTOP-F56FK09', 'USERNAME': 'Mike', 'USERPROFILE': 'C:\\Users\\Mike', 'WINDIR': 'C:\\Windows'})